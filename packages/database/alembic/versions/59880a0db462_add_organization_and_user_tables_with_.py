"""Add organization and user tables with S3 file tracking

Revision ID: 59880a0db462
Revises: 001
Create Date: 2025-09-18 03:04:57.952641

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '59880a0db462'
down_revision = '001'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('s3_bucket_name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_organizations_created', 'organizations', ['created_at'], unique=False)
    op.create_index('idx_organizations_slug', 'organizations', ['slug'], unique=False)
    op.create_index(op.f('ix_organizations_name'), 'organizations', ['name'], unique=False)
    op.create_index(op.f('ix_organizations_slug'), 'organizations', ['slug'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('profile_data', sa.JSON(), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_users_active', 'users', ['is_active'], unique=False)
    op.create_index('idx_users_created', 'users', ['created_at'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('organization_members',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'user_id', name='uq_org_member')
    )
    op.create_index('idx_org_members_active', 'organization_members', ['is_active'], unique=False)
    op.create_index('idx_org_members_role', 'organization_members', ['role'], unique=False)
    op.create_index(op.f('ix_organization_members_role'), 'organization_members', ['role'], unique=False)
    op.create_table('s3_files',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('file_name', sa.String(length=500), nullable=False),
    sa.Column('original_file_name', sa.String(length=500), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('s3_key', sa.Text(), nullable=False),
    sa.Column('s3_bucket', sa.String(length=255), nullable=False),
    sa.Column('file_size_bytes', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(length=255), nullable=True),
    sa.Column('file_hash', sa.String(length=64), nullable=True),
    sa.Column('file_metadata', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_s3_files_bucket_key', 's3_files', ['s3_bucket', 's3_key'], unique=False)
    op.create_index('idx_s3_files_hash', 's3_files', ['file_hash'], unique=False)
    op.create_index('idx_s3_files_org_created', 's3_files', ['organization_id', 'created_at'], unique=False)
    op.create_index('idx_s3_files_user_created', 's3_files', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_s3_files_file_hash'), 's3_files', ['file_hash'], unique=False)
    op.create_index(op.f('ix_s3_files_file_name'), 's3_files', ['file_name'], unique=False)
    op.create_index(op.f('ix_s3_files_s3_bucket'), 's3_files', ['s3_bucket'], unique=False)
    op.create_index(op.f('ix_s3_files_s3_key'), 's3_files', ['s3_key'], unique=False)
    op.add_column('ingestion_jobs', sa.Column('organization_id', sa.UUID(), nullable=False))
    op.add_column('ingestion_jobs', sa.Column('user_id', sa.UUID(), nullable=False))
    op.alter_column('ingestion_jobs', 'priority',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ingestion_jobs', 'total_files',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ingestion_jobs', 'successful_files',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ingestion_jobs', 'failed_files',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('ingestion_jobs', 'total_chunks_created',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_ingestion_jobs_organization_id'), 'ingestion_jobs', ['organization_id'], unique=False)
    op.create_index(op.f('ix_ingestion_jobs_user_id'), 'ingestion_jobs', ['user_id'], unique=False)
    op.create_foreign_key(None, 'ingestion_jobs', 'organizations', ['organization_id'], ['id'])
    op.create_foreign_key(None, 'ingestion_jobs', 'users', ['user_id'], ['id'])
    op.alter_column('processed_documents', 'total_chunks_created',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('processed_documents', 'total_points_stored',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_processed_documents_file_hash'), 'processed_documents', ['file_hash'], unique=False)
    op.create_foreign_key(None, 'processing_logs', 'processed_documents', ['document_id'], ['id'])
    op.create_foreign_key(None, 'processing_logs', 'ingestion_jobs', ['ingestion_job_id'], ['id'])
    op.alter_column('processing_statistics', 'total_documents_processed',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('processing_statistics', 'successful_documents',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('processing_statistics', 'failed_documents',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('processing_statistics', 'gpt_documents',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('processing_statistics', 'docling_documents',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('processing_statistics', 'total_processing_time_seconds',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('processing_statistics', 'total_tokens_used',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('processing_statistics', 'total_chunks_created',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('processing_statistics', 'total_points_stored',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_processing_statistics_date'), 'processing_statistics', ['date'], unique=False)
    op.alter_column('system_configuration', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('system_configuration', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_constraint(op.f('system_configuration_key_key'), 'system_configuration', type_='unique')
    op.drop_index(op.f('ix_system_configuration_key'), table_name='system_configuration')
    op.create_index(op.f('ix_system_configuration_key'), 'system_configuration', ['key'], unique=True)
    op.alter_column('vector_store_references', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('vector_store_references', 'last_updated',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('ix_system_configuration_key'), table_name='system_configuration')
    op.create_index(op.f('ix_system_configuration_key'), 'system_configuration', ['key'], unique=False)
    op.create_unique_constraint(op.f('system_configuration_key_key'), 'system_configuration', ['key'], postgresql_nulls_not_distinct=False)
    op.alter_column('system_configuration', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('system_configuration', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('ix_processing_statistics_date'), table_name='processing_statistics')
    op.alter_column('processing_statistics', 'total_points_stored',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('processing_statistics', 'total_chunks_created',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('processing_statistics', 'total_tokens_used',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('processing_statistics', 'total_processing_time_seconds',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('processing_statistics', 'docling_documents',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('processing_statistics', 'gpt_documents',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('processing_statistics', 'failed_documents',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('processing_statistics', 'successful_documents',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('processing_statistics', 'total_documents_processed',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'processing_logs', type_='foreignkey')
    op.drop_constraint(None, 'processing_logs', type_='foreignkey')
    op.drop_index(op.f('ix_processed_documents_file_hash'), table_name='processed_documents')
    op.alter_column('processed_documents', 'total_points_stored',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('processed_documents', 'total_chunks_created',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'ingestion_jobs', type_='foreignkey')
    op.drop_constraint(None, 'ingestion_jobs', type_='foreignkey')
    op.drop_index(op.f('ix_ingestion_jobs_user_id'), table_name='ingestion_jobs')
    op.drop_index(op.f('ix_ingestion_jobs_organization_id'), table_name='ingestion_jobs')
    op.alter_column('ingestion_jobs', 'total_chunks_created',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ingestion_jobs', 'failed_files',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ingestion_jobs', 'successful_files',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ingestion_jobs', 'total_files',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('ingestion_jobs', 'priority',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('ingestion_jobs', 'user_id')
    op.drop_column('ingestion_jobs', 'organization_id')
    op.drop_index(op.f('ix_s3_files_s3_key'), table_name='s3_files')
    op.drop_index(op.f('ix_s3_files_s3_bucket'), table_name='s3_files')
    op.drop_index(op.f('ix_s3_files_file_name'), table_name='s3_files')
    op.drop_index(op.f('ix_s3_files_file_hash'), table_name='s3_files')
    op.drop_index('idx_s3_files_user_created', table_name='s3_files')
    op.drop_index('idx_s3_files_org_created', table_name='s3_files')
    op.drop_index('idx_s3_files_hash', table_name='s3_files')
    op.drop_index('idx_s3_files_bucket_key', table_name='s3_files')
    op.drop_table('s3_files')
    op.drop_index(op.f('ix_organization_members_role'), table_name='organization_members')
    op.drop_index('idx_org_members_role', table_name='organization_members')
    op.drop_index('idx_org_members_active', table_name='organization_members')
    op.drop_table('organization_members')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_created', table_name='users')
    op.drop_index('idx_users_active', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_organizations_slug'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_name'), table_name='organizations')
    op.drop_index('idx_organizations_slug', table_name='organizations')
    op.drop_index('idx_organizations_created', table_name='organizations')
    op.drop_table('organizations')
    # ### end Alembic commands ###
